{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "partCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiveEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Lottery.sol"
  },
  "ast": {
    "absolutePath": "contracts/Lottery.sol",
    "exportedSymbols": {
      "Lottery": [
        146
      ]
    },
    "id": 147,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<=",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Lottery",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 146,
        "linearizedBaseContracts": [
          146
        ],
        "name": "Lottery",
        "nameLocation": "75:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "481c6a75",
            "id": 3,
            "mutability": "mutable",
            "name": "manager",
            "nameLocation": "104:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 146,
            "src": "89:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "89:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f71d96cb",
            "id": 6,
            "mutability": "mutable",
            "name": "players",
            "nameLocation": "134:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 146,
            "src": "117:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 4,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "117:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 5,
              "nodeType": "ArrayTypeName",
              "src": "117:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "pastWinners",
            "nameLocation": "157:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 146,
            "src": "147:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "147:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 8,
              "nodeType": "ArrayTypeName",
              "src": "147:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "189:37:0",
              "statements": [
                {
                  "expression": {
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12,
                      "name": "manager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "199:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 13,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "209:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "213:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "209:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "199:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "199:20:0"
                }
              ]
            },
            "id": 18,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "186:2:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "189:0:0"
            },
            "scope": 146,
            "src": "175:51:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "255:86:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 21,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "273:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 22,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "277:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "273:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 23,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "287:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "273:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41636365737320746f204d616e61676572204f6e6c792121",
                        "id": 25,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "296:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e80e4eb19c36123ca671a1cd2f35edcbace66ab2768b60cbac3839e5f2f9afec",
                          "typeString": "literal_string \"Access to Manager Only!!\""
                        },
                        "value": "Access to Manager Only!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e80e4eb19c36123ca671a1cd2f35edcbace66ab2768b60cbac3839e5f2f9afec",
                          "typeString": "literal_string \"Access to Manager Only!!\""
                        }
                      ],
                      "id": 20,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "265:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "265:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "265:58:0"
                },
                {
                  "id": 28,
                  "nodeType": "PlaceholderStatement",
                  "src": "333:1:0"
                }
              ]
            },
            "id": 30,
            "name": "onlyManager",
            "nameLocation": "241:11:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "252:2:0"
            },
            "src": "232:109:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "398:38:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 35,
                      "name": "players",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "415:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "423:6:0",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "415:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34,
                  "id": 37,
                  "nodeType": "Return",
                  "src": "408:21:0"
                }
              ]
            },
            "functionSelector": "90e3d327",
            "id": 39,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "partCount",
            "nameLocation": "356:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "365:2:0"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "389:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "388:9:0"
            },
            "scope": 146,
            "src": "347:89:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "479:113:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 43,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "497:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "501:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "497:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "302e3031",
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "510:10:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000_by_1",
                            "typeString": "int_const 10000000000000000"
                          },
                          "value": "0.01"
                        },
                        "src": "497:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e64206d6f7265207468616e20302e303120657468657273",
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "522:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_430801405f11d5a91cefb095171cc19bc99113370022e3a3af338ff7c5810d57",
                          "typeString": "literal_string \"Send more than 0.01 ethers\""
                        },
                        "value": "Send more than 0.01 ethers"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_430801405f11d5a91cefb095171cc19bc99113370022e3a3af338ff7c5810d57",
                          "typeString": "literal_string \"Send more than 0.01 ethers\""
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "489:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "489:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "489:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "574:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "578:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "574:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "561:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "569:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "561:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "561:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "561:24:0"
                }
              ]
            },
            "functionSelector": "4185f8eb",
            "id": 58,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "receiveEth",
            "nameLocation": "451:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "461:2:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "479:0:0"
            },
            "scope": 146,
            "src": "442:150:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "650:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 65,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "675:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Lottery_$146",
                            "typeString": "contract Lottery"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Lottery_$146",
                            "typeString": "contract Lottery"
                          }
                        ],
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "667:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 63,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "667:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "667:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "681:7:0",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "667:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 62,
                  "id": 68,
                  "nodeType": "Return",
                  "src": "660:28:0"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "607:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "617:2:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "641:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "641:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "640:9:0"
            },
            "scope": 146,
            "src": "598:97:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "750:184:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 80,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "852:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 81,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "858:10:0",
                                "memberName": "difficulty",
                                "nodeType": "MemberAccess",
                                "src": "852:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 82,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "870:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 83,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "876:9:0",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "870:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 84,
                                "name": "players",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6,
                                "src": "887:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              ],
                              "expression": {
                                "id": 78,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "835:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 79,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "839:12:0",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "835:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 85,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "835:60:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 77,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "804:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "804:109:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "779:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 75,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "779:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "779:148:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 74,
                  "id": 88,
                  "nodeType": "Return",
                  "src": "760:167:0"
                }
              ]
            },
            "id": 90,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "random",
            "nameLocation": "710:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "716:2:0"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "741:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "740:9:0"
            },
            "scope": 146,
            "src": "701:233:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "980:311:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 96,
                            "name": "players",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "998:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1006:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "998:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1015:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "998:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c617965727320636f756e742069732030",
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1018:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d74944adf38ebca3f5c03c9a894b66261dea5ea95ea4aee734fd2a51b804113",
                          "typeString": "literal_string \"Players count is 0\""
                        },
                        "value": "Players count is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d74944adf38ebca3f5c03c9a894b66261dea5ea95ea4aee734fd2a51b804113",
                          "typeString": "literal_string \"Players count is 0\""
                        }
                      ],
                      "id": 95,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "990:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "990:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "990:49:0"
                },
                {
                  "assignments": [
                    104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 104,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "1057:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 144,
                      "src": "1049:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 103,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1049:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 110,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 105,
                        "name": "random",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1065:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1065:8:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "expression": {
                        "id": 107,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1076:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1084:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1076:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1065:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1049:41:0"
                },
                {
                  "assignments": [
                    112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 112,
                      "mutability": "mutable",
                      "name": "winnerPlayer",
                      "nameLocation": "1116:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 144,
                      "src": "1100:28:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 111,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1100:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 119,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 115,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "1139:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 117,
                        "indexExpression": {
                          "id": 116,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "1147:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1139:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1131:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 113,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1131:8:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1131:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1100:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 123,
                        "name": "winnerPlayer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "1181:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 120,
                        "name": "pastWinners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1164:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1176:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1164:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1164:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "1164:30:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 131,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1234:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Lottery_$146",
                                "typeString": "contract Lottery"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Lottery_$146",
                                "typeString": "contract Lottery"
                              }
                            ],
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1226:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 129,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1226:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1226:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1240:7:0",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1226:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 126,
                        "name": "winnerPlayer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "1204:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1217:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1204:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1204:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:44:0"
                },
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 136,
                      "name": "players",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1258:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1282:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1268:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 137,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1272:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 138,
                          "nodeType": "ArrayTypeName",
                          "src": "1272:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1268:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "1258:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "1258:26:0"
                }
              ]
            },
            "functionSelector": "8e7ea5b2",
            "id": 145,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 93,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 92,
                  "name": "onlyManager",
                  "nameLocations": [
                    "968:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30,
                  "src": "968:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "968:11:0"
              }
            ],
            "name": "getWinner",
            "nameLocation": "949:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:2:0"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "980:0:0"
            },
            "scope": 146,
            "src": "940:351:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 147,
        "src": "66:1233:0",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "32:1268:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b031916331790556104cd806100326000396000f3fe6080604052600436106100555760003560e01c806312065fe01461005a5780634185f8eb1461007c578063481c6a75146100865780638e7ea5b2146100be57806390e3d327146100d3578063f71d96cb146100e8575b600080fd5b34801561006657600080fd5b50475b6040519081526020015b60405180910390f35b610084610108565b005b34801561009257600080fd5b506000546100a6906001600160a01b031681565b6040516001600160a01b039091168152602001610073565b3480156100ca57600080fd5b506100846101a7565b3480156100df57600080fd5b50600154610069565b3480156100f457600080fd5b506100a66101033660046103f6565b61031c565b662386f26fc100003410156101645760405162461bcd60e51b815260206004820152601a60248201527f53656e64206d6f7265207468616e20302e30312065746865727300000000000060448201526064015b60405180910390fd5b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b03191633179055565b6000546001600160a01b031633146102015760405162461bcd60e51b815260206004820152601860248201527f41636365737320746f204d616e61676572204f6e6c7921210000000000000000604482015260640161015b565b6001546102455760405162461bcd60e51b81526020600482015260126024820152710506c617965727320636f756e7420697320360741b604482015260640161015b565b600154600090610253610346565b61025d919061040f565b905060006001828154811061027457610274610431565b6000918252602082200154600280546001810182559083527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b03909216918217905560405190925082914780156108fc02929091818181858888f193505050501580156102f9573d6000803e3d6000fd5b5060408051600081526020810191829052516103179160019161037c565b505050565b6001818154811061032c57600080fd5b6000918252602090912001546001600160a01b0316905081565b60004442600160405160200161035e93929190610447565b6040516020818303038152906040528051906020012060001c905090565b8280548282559060005260206000209081019282156103d1579160200282015b828111156103d157825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061039c565b506103dd9291506103e1565b5090565b5b808211156103dd57600081556001016103e2565b60006020828403121561040857600080fd5b5035919050565b60008261042c57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b838152600060208481840152604083018454856000528260002060005b828110156104895781546001600160a01b031684529284019260019182019101610464565b50919897505050505050505056fea264697066735822122064515895d070090f7279756a515333d5a8987508701c3a3e85d362be0802fd2f64736f6c63430008140033",
  "bytecodeSha1": "8dcc1ce357aa0d945bf191a772c06a988b537de6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.20+commit.a1b79de6"
  },
  "contractName": "Lottery",
  "coverageMap": {
    "branches": {
      "0": {
        "Lottery.receiveEth": {
          "9": [
            497,
            520,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Lottery.getBalance": {
          "0": [
            660,
            688
          ]
        },
        "Lottery.getWinner": {
          "4": [
            990,
            1039
          ],
          "5": [
            1164,
            1194
          ],
          "6": [
            1204,
            1248
          ],
          "7": [
            1258,
            1284
          ]
        },
        "Lottery.partCount": {
          "1": [
            408,
            429
          ]
        },
        "Lottery.random": {
          "8": [
            760,
            927
          ]
        },
        "Lottery.receiveEth": {
          "2": [
            489,
            551
          ],
          "3": [
            561,
            585
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052600436106100555760003560e01c806312065fe01461005a5780634185f8eb1461007c578063481c6a75146100865780638e7ea5b2146100be57806390e3d327146100d3578063f71d96cb146100e8575b600080fd5b34801561006657600080fd5b50475b6040519081526020015b60405180910390f35b610084610108565b005b34801561009257600080fd5b506000546100a6906001600160a01b031681565b6040516001600160a01b039091168152602001610073565b3480156100ca57600080fd5b506100846101a7565b3480156100df57600080fd5b50600154610069565b3480156100f457600080fd5b506100a66101033660046103f6565b61031c565b662386f26fc100003410156101645760405162461bcd60e51b815260206004820152601a60248201527f53656e64206d6f7265207468616e20302e30312065746865727300000000000060448201526064015b60405180910390fd5b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b03191633179055565b6000546001600160a01b031633146102015760405162461bcd60e51b815260206004820152601860248201527f41636365737320746f204d616e61676572204f6e6c7921210000000000000000604482015260640161015b565b6001546102455760405162461bcd60e51b81526020600482015260126024820152710506c617965727320636f756e7420697320360741b604482015260640161015b565b600154600090610253610346565b61025d919061040f565b905060006001828154811061027457610274610431565b6000918252602082200154600280546001810182559083527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b03909216918217905560405190925082914780156108fc02929091818181858888f193505050501580156102f9573d6000803e3d6000fd5b5060408051600081526020810191829052516103179160019161037c565b505050565b6001818154811061032c57600080fd5b6000918252602090912001546001600160a01b0316905081565b60004442600160405160200161035e93929190610447565b6040516020818303038152906040528051906020012060001c905090565b8280548282559060005260206000209081019282156103d1579160200282015b828111156103d157825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061039c565b506103dd9291506103e1565b5090565b5b808211156103dd57600081556001016103e2565b60006020828403121561040857600080fd5b5035919050565b60008261042c57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b838152600060208481840152604083018454856000528260002060005b828110156104895781546001600160a01b031684529284019260019182019101610464565b50919897505050505050505056fea264697066735822122064515895d070090f7279756a515333d5a8987508701c3a3e85d362be0802fd2f64736f6c63430008140033",
  "deployedSourceMap": "66:1233:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:97;;;;;;;;;;-1:-1:-1;667:21:0;598:97;;;160:25:1;;;148:2;133:18;598:97:0;;;;;;;;442:150;;;:::i;:::-;;89:22;;;;;;;;;;-1:-1:-1;89:22:0;;;;-1:-1:-1;;;;;89:22:0;;;;;;-1:-1:-1;;;;;360:32:1;;;342:51;;330:2;315:18;89:22:0;196:203:1;940:351:0;;;;;;;;;;;;;:::i;347:89::-;;;;;;;;;;-1:-1:-1;415:7:0;:14;347:89;;117:24;;;;;;;;;;-1:-1:-1;117:24:0;;;;;:::i;:::-;;:::i;442:150::-;510:10;497:9;:23;;489:62;;;;-1:-1:-1;;;489:62:0;;791:2:1;489:62:0;;;773:21:1;830:2;810:18;;;803:30;869:28;849:18;;;842:56;915:18;;489:62:0;;;;;;;;;561:7;:24;;;;;;;-1:-1:-1;561:24:0;;;;;;;;-1:-1:-1;;;;;;561:24:0;574:10;561:24;;;442:150::o;940:351::-;287:7;;-1:-1:-1;;;;;287:7:0;273:10;:21;265:58;;;;-1:-1:-1;;;265:58:0;;1146:2:1;265:58:0;;;1128:21:1;1185:2;1165:18;;;1158:30;1224:26;1204:18;;;1197:54;1268:18;;265:58:0;944:348:1;265:58:0;998:7:::1;:14:::0;990:49:::1;;;::::0;-1:-1:-1;;;990:49:0;;1499:2:1;990:49:0::1;::::0;::::1;1481:21:1::0;1538:2;1518:18;;;1511:30;-1:-1:-1;;;1557:18:1;;;1550:48;1615:18;;990:49:0::1;1297:342:1::0;990:49:0::1;1076:7;:14:::0;1049:13:::1;::::0;1065:8:::1;:6;:8::i;:::-;:25;;;;:::i;:::-;1049:41;;1100:28;1139:7;1147:5;1139:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;1164:11:::1;:30:::0;;1139:14;1164:30;::::1;::::0;;;;;;::::1;::::0;;-1:-1:-1;;;;;;1164:30:0::1;-1:-1:-1::0;;;;;1139:14:0;;::::1;1164:30:::0;;::::1;::::0;;1204:44:::1;::::0;1139:14;;-1:-1:-1;1139:14:0;;1226:21:::1;1204:44:::0;::::1;;;::::0;1226:21;;1204:44;1139:14;1204:44;1226:21;1139:14;1204:44;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1268:16:0::1;::::0;;1282:1:::1;1268:16:::0;;::::1;::::0;::::1;::::0;;;;1258:26;::::1;::::0;:7:::1;::::0;:26:::1;:::i;:::-;;980:311;;940:351::o:0;117:24::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;117:24:0;;-1:-1:-1;117:24:0;:::o;701:233::-;741:7;852:16;870:15;887:7;835:60;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;804:109;;;;;;779:148;;760:167;;701:233;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;404:180:1;463:6;516:2;504:9;495:7;491:23;487:32;484:52;;;532:1;529;522:12;484:52;-1:-1:-1;555:23:1;;404:180;-1:-1:-1;404:180:1:o;1644:209::-;1676:1;1702;1692:132;;1746:10;1741:3;1737:20;1734:1;1727:31;1781:4;1778:1;1771:15;1809:4;1806:1;1799:15;1692:132;-1:-1:-1;1838:9:1;;1644:209::o;1858:127::-;1919:10;1914:3;1910:20;1907:1;1900:31;1950:4;1947:1;1940:15;1974:4;1971:1;1964:15;2122:722;2366:6;2361:3;2354:19;2336:3;2392:2;2424:6;2419:2;2414:3;2410:12;2403:28;2462:2;2457:3;2453:12;2494:6;2488:13;2543:6;2540:1;2533:17;2586:2;2583:1;2573:16;2607:1;2617:200;2631:6;2628:1;2625:13;2617:200;;;2698:13;;-1:-1:-1;;;;;2694:39:1;2680:54;;2756:14;;;;2730:1;2793:14;;;;2646:9;2617:200;;;-1:-1:-1;2833:5:1;;2122:722;-1:-1:-1;;;;;;;;2122:722:1:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    66,
    1299
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x4185F8EB EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x86 JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x90E3D327 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xF71D96CB EQ PUSH2 0xE8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x84 PUSH2 0x108 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xA6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x73 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84 PUSH2 0x1A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x69 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE LT ISZERO PUSH2 0x164 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64206D6F7265207468616E20302E303120657468657273000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41636365737320746F204D616E61676572204F6E6C7921210000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x506C617965727320636F756E74206973203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x253 PUSH2 0x346 JUMP JUMPDEST PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x40F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x274 JUMPI PUSH2 0x274 PUSH2 0x431 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP3 POP DUP3 SWAP2 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE MLOAD PUSH2 0x317 SWAP2 PUSH1 0x1 SWAP2 PUSH2 0x37C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DIFFICULTY TIMESTAMP PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x35E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3D1 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3D1 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x39C JUMP JUMPDEST POP PUSH2 0x3DD SWAP3 SWAP2 POP PUSH2 0x3E1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3DD JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x42C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 DUP2 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD DUP5 SLOAD DUP6 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x489 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x464 JUMP JUMPDEST POP SWAP2 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x515895D070 MULMOD 0xF PUSH19 0x79756A515333D5A8987508701C3A3E85D362BE ADDMOD MUL REVERT 0x2F PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        66,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55"
    },
    "12": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x12065FE0"
    },
    "25": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "EQ",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A"
    },
    "29": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4185F8EB"
    },
    "36": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C"
    },
    "40": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x481C6A75"
    },
    "47": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86"
    },
    "51": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8E7EA5B2"
    },
    "58": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE"
    },
    "62": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x90E3D327"
    },
    "69": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3"
    },
    "73": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF71D96CB"
    },
    "80": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE8"
    },
    "84": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "88": {
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "DUP1",
      "path": "0"
    },
    "89": {
      "first_revert": true,
      "fn": null,
      "offset": [
        66,
        1299
      ],
      "op": "REVERT",
      "path": "0"
    },
    "90": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "91": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "92": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "DUP1",
      "path": "0"
    },
    "93": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "94": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "97": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "op": "POP"
    },
    "104": {
      "fn": "Lottery.getBalance",
      "offset": [
        667,
        688
      ],
      "op": "SELFBALANCE",
      "path": "0",
      "statement": 0
    },
    "105": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "106": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "108": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "109": {
      "op": "SWAP1"
    },
    "110": {
      "op": "DUP2"
    },
    "111": {
      "op": "MSTORE"
    },
    "112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "114": {
      "op": "ADD"
    },
    "115": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "116": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "118": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "119": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "DUP1",
      "path": "0"
    },
    "120": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "121": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "SUB",
      "path": "0"
    },
    "122": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "123": {
      "fn": "Lottery.getBalance",
      "offset": [
        598,
        695
      ],
      "op": "RETURN",
      "path": "0"
    },
    "124": {
      "fn": "Lottery.receiveEth",
      "offset": [
        442,
        592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "125": {
      "fn": "Lottery.receiveEth",
      "offset": [
        442,
        592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84"
    },
    "128": {
      "fn": "Lottery.receiveEth",
      "offset": [
        442,
        592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x108"
    },
    "131": {
      "fn": "Lottery.receiveEth",
      "jump": "i",
      "offset": [
        442,
        592
      ],
      "op": "JUMP",
      "path": "0"
    },
    "132": {
      "fn": "Lottery.receiveEth",
      "offset": [
        442,
        592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "133": {
      "fn": "Lottery.receiveEth",
      "offset": [
        442,
        592
      ],
      "op": "STOP",
      "path": "0"
    },
    "134": {
      "offset": [
        89,
        111
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "135": {
      "fn": "Lottery.receiveEth",
      "offset": [
        89,
        111
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "136": {
      "fn": "Lottery.receiveEth",
      "offset": [
        89,
        111
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": "Lottery.receiveEth",
      "offset": [
        89,
        111
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "138": {
      "fn": "Lottery.receiveEth",
      "offset": [
        89,
        111
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92"
    },
    "141": {
      "fn": "Lottery.receiveEth",
      "offset": [
        89,
        111
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "142": {
      "fn": "Lottery.receiveEth",
      "offset": [
        89,
        111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "144": {
      "fn": "Lottery.receiveEth",
      "offset": [
        89,
        111
      ],
      "op": "DUP1",
      "path": "0"
    },
    "145": {
      "fn": "Lottery.receiveEth",
      "offset": [
        89,
        111
      ],
      "op": "REVERT",
      "path": "0"
    },
    "146": {
      "fn": "Lottery.receiveEth",
      "offset": [
        89,
        111
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "147": {
      "op": "POP"
    },
    "148": {
      "offset": [
        89,
        111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "150": {
      "fn": "Lottery.receiveEth",
      "offset": [
        89,
        111
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "151": {
      "fn": "Lottery.receiveEth",
      "offset": [
        89,
        111
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA6"
    },
    "154": {
      "fn": "Lottery.receiveEth",
      "offset": [
        89,
        111
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "161": {
      "op": "SHL"
    },
    "162": {
      "op": "SUB"
    },
    "163": {
      "offset": [
        89,
        111
      ],
      "op": "AND",
      "path": "0"
    },
    "164": {
      "fn": "Lottery.receiveEth",
      "offset": [
        89,
        111
      ],
      "op": "DUP2",
      "path": "0"
    },
    "165": {
      "fn": "Lottery.receiveEth",
      "offset": [
        89,
        111
      ],
      "op": "JUMP",
      "path": "0"
    },
    "166": {
      "fn": "Lottery.receiveEth",
      "offset": [
        89,
        111
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "167": {
      "fn": "Lottery.receiveEth",
      "offset": [
        89,
        111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "169": {
      "fn": "Lottery.receiveEth",
      "offset": [
        89,
        111
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "176": {
      "op": "SHL"
    },
    "177": {
      "op": "SUB"
    },
    "178": {
      "op": "SWAP1"
    },
    "179": {
      "op": "SWAP2"
    },
    "180": {
      "op": "AND"
    },
    "181": {
      "op": "DUP2"
    },
    "182": {
      "op": "MSTORE"
    },
    "183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "185": {
      "op": "ADD"
    },
    "186": {
      "offset": [
        89,
        111
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73"
    },
    "189": {
      "op": "JUMP"
    },
    "190": {
      "fn": "Lottery.getWinner",
      "offset": [
        940,
        1291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "191": {
      "fn": "Lottery.getWinner",
      "offset": [
        940,
        1291
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "192": {
      "fn": "Lottery.getWinner",
      "offset": [
        940,
        1291
      ],
      "op": "DUP1",
      "path": "0"
    },
    "193": {
      "fn": "Lottery.getWinner",
      "offset": [
        940,
        1291
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "194": {
      "fn": "Lottery.getWinner",
      "offset": [
        940,
        1291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA"
    },
    "197": {
      "fn": "Lottery.getWinner",
      "offset": [
        940,
        1291
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "198": {
      "fn": "Lottery.getWinner",
      "offset": [
        940,
        1291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "200": {
      "fn": "Lottery.getWinner",
      "offset": [
        940,
        1291
      ],
      "op": "DUP1",
      "path": "0"
    },
    "201": {
      "fn": "Lottery.getWinner",
      "offset": [
        940,
        1291
      ],
      "op": "REVERT",
      "path": "0"
    },
    "202": {
      "fn": "Lottery.getWinner",
      "offset": [
        940,
        1291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "203": {
      "fn": "Lottery.getWinner",
      "offset": [
        940,
        1291
      ],
      "op": "POP",
      "path": "0"
    },
    "204": {
      "fn": "Lottery.getWinner",
      "offset": [
        940,
        1291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84"
    },
    "207": {
      "fn": "Lottery.getWinner",
      "offset": [
        940,
        1291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A7"
    },
    "210": {
      "fn": "Lottery.getWinner",
      "jump": "i",
      "offset": [
        940,
        1291
      ],
      "op": "JUMP",
      "path": "0"
    },
    "211": {
      "fn": "Lottery.partCount",
      "offset": [
        347,
        436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "212": {
      "fn": "Lottery.partCount",
      "offset": [
        347,
        436
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "213": {
      "fn": "Lottery.partCount",
      "offset": [
        347,
        436
      ],
      "op": "DUP1",
      "path": "0"
    },
    "214": {
      "fn": "Lottery.partCount",
      "offset": [
        347,
        436
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "215": {
      "fn": "Lottery.partCount",
      "offset": [
        347,
        436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF"
    },
    "218": {
      "fn": "Lottery.partCount",
      "offset": [
        347,
        436
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "219": {
      "fn": "Lottery.partCount",
      "offset": [
        347,
        436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "221": {
      "fn": "Lottery.partCount",
      "offset": [
        347,
        436
      ],
      "op": "DUP1",
      "path": "0"
    },
    "222": {
      "fn": "Lottery.partCount",
      "offset": [
        347,
        436
      ],
      "op": "REVERT",
      "path": "0"
    },
    "223": {
      "fn": "Lottery.partCount",
      "offset": [
        347,
        436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "224": {
      "op": "POP"
    },
    "225": {
      "fn": "Lottery.partCount",
      "offset": [
        415,
        422
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x1"
    },
    "227": {
      "fn": "Lottery.partCount",
      "offset": [
        415,
        429
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "228": {
      "fn": "Lottery.partCount",
      "offset": [
        347,
        436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69"
    },
    "231": {
      "fn": "Lottery.partCount",
      "offset": [
        347,
        436
      ],
      "op": "JUMP",
      "path": "0"
    },
    "232": {
      "offset": [
        117,
        141
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "233": {
      "fn": "Lottery.partCount",
      "offset": [
        117,
        141
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "234": {
      "fn": "Lottery.partCount",
      "offset": [
        117,
        141
      ],
      "op": "DUP1",
      "path": "0"
    },
    "235": {
      "fn": "Lottery.partCount",
      "offset": [
        117,
        141
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "236": {
      "fn": "Lottery.partCount",
      "offset": [
        117,
        141
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF4"
    },
    "239": {
      "fn": "Lottery.partCount",
      "offset": [
        117,
        141
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "240": {
      "fn": "Lottery.partCount",
      "offset": [
        117,
        141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "242": {
      "fn": "Lottery.partCount",
      "offset": [
        117,
        141
      ],
      "op": "DUP1",
      "path": "0"
    },
    "243": {
      "fn": "Lottery.partCount",
      "offset": [
        117,
        141
      ],
      "op": "REVERT",
      "path": "0"
    },
    "244": {
      "fn": "Lottery.partCount",
      "offset": [
        117,
        141
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "245": {
      "op": "POP"
    },
    "246": {
      "offset": [
        117,
        141
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA6"
    },
    "249": {
      "fn": "Lottery.partCount",
      "offset": [
        117,
        141
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "252": {
      "fn": "Lottery.partCount",
      "offset": [
        117,
        141
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "253": {
      "fn": "Lottery.partCount",
      "offset": [
        117,
        141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "255": {
      "fn": "Lottery.partCount",
      "offset": [
        117,
        141
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F6"
    },
    "258": {
      "fn": "Lottery.partCount",
      "jump": "i",
      "offset": [
        117,
        141
      ],
      "op": "JUMP",
      "path": "0"
    },
    "259": {
      "fn": "Lottery.partCount",
      "offset": [
        117,
        141
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "260": {
      "fn": "Lottery.partCount",
      "offset": [
        117,
        141
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C"
    },
    "263": {
      "fn": "Lottery.partCount",
      "jump": "i",
      "offset": [
        117,
        141
      ],
      "op": "JUMP",
      "path": "0"
    },
    "264": {
      "fn": "Lottery.receiveEth",
      "offset": [
        442,
        592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "265": {
      "fn": "Lottery.receiveEth",
      "offset": [
        510,
        520
      ],
      "op": "PUSH7",
      "path": "0",
      "statement": 2,
      "value": "0x2386F26FC10000"
    },
    "273": {
      "fn": "Lottery.receiveEth",
      "offset": [
        497,
        506
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "274": {
      "fn": "Lottery.receiveEth",
      "offset": [
        497,
        520
      ],
      "op": "LT",
      "path": "0"
    },
    "275": {
      "branch": 9,
      "fn": "Lottery.receiveEth",
      "offset": [
        497,
        520
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "276": {
      "fn": "Lottery.receiveEth",
      "offset": [
        489,
        551
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164"
    },
    "279": {
      "branch": 9,
      "fn": "Lottery.receiveEth",
      "offset": [
        489,
        551
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "280": {
      "fn": "Lottery.receiveEth",
      "offset": [
        489,
        551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "282": {
      "fn": "Lottery.receiveEth",
      "offset": [
        489,
        551
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "283": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "287": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "289": {
      "op": "SHL"
    },
    "290": {
      "fn": "Lottery.receiveEth",
      "offset": [
        489,
        551
      ],
      "op": "DUP2",
      "path": "0"
    },
    "291": {
      "fn": "Lottery.receiveEth",
      "offset": [
        489,
        551
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "292": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "294": {
      "fn": "Lottery.receiveEth",
      "offset": [
        489,
        551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "296": {
      "fn": "Lottery.receiveEth",
      "offset": [
        489,
        551
      ],
      "op": "DUP3",
      "path": "0"
    },
    "297": {
      "fn": "Lottery.receiveEth",
      "offset": [
        489,
        551
      ],
      "op": "ADD",
      "path": "0"
    },
    "298": {
      "op": "MSTORE"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "301": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "303": {
      "op": "DUP3"
    },
    "304": {
      "op": "ADD"
    },
    "305": {
      "op": "MSTORE"
    },
    "306": {
      "op": "PUSH32",
      "value": "0x53656E64206D6F7265207468616E20302E303120657468657273000000000000"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "341": {
      "op": "DUP3"
    },
    "342": {
      "op": "ADD"
    },
    "343": {
      "op": "MSTORE"
    },
    "344": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "346": {
      "op": "ADD"
    },
    "347": {
      "fn": "Lottery.receiveEth",
      "offset": [
        489,
        551
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "348": {
      "fn": "Lottery.receiveEth",
      "offset": [
        489,
        551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "350": {
      "fn": "Lottery.receiveEth",
      "offset": [
        489,
        551
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "351": {
      "fn": "Lottery.receiveEth",
      "offset": [
        489,
        551
      ],
      "op": "DUP1",
      "path": "0"
    },
    "352": {
      "fn": "Lottery.receiveEth",
      "offset": [
        489,
        551
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "353": {
      "fn": "Lottery.receiveEth",
      "offset": [
        489,
        551
      ],
      "op": "SUB",
      "path": "0"
    },
    "354": {
      "fn": "Lottery.receiveEth",
      "offset": [
        489,
        551
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "355": {
      "fn": "Lottery.receiveEth",
      "offset": [
        489,
        551
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "356": {
      "fn": "Lottery.receiveEth",
      "offset": [
        489,
        551
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "357": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        568
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x1"
    },
    "359": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "360": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "361": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "362": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "DUP3",
      "path": "0"
    },
    "363": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "ADD",
      "path": "0"
    },
    "364": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "DUP3",
      "path": "0"
    },
    "365": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "368": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "369": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "370": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "371": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "372": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "405": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "ADD",
      "path": "0"
    },
    "406": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "407": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "412": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "414": {
      "op": "SHL"
    },
    "415": {
      "op": "SUB"
    },
    "416": {
      "op": "NOT"
    },
    "417": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "AND",
      "path": "0"
    },
    "418": {
      "fn": "Lottery.receiveEth",
      "offset": [
        574,
        584
      ],
      "op": "CALLER",
      "path": "0"
    },
    "419": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "OR",
      "path": "0"
    },
    "420": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "421": {
      "fn": "Lottery.receiveEth",
      "offset": [
        561,
        585
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "422": {
      "fn": "Lottery.receiveEth",
      "jump": "o",
      "offset": [
        442,
        592
      ],
      "op": "JUMP",
      "path": "0"
    },
    "423": {
      "fn": "Lottery.getWinner",
      "offset": [
        940,
        1291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "424": {
      "offset": [
        287,
        294
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "426": {
      "fn": "Lottery.getWinner",
      "offset": [
        287,
        294
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "433": {
      "op": "SHL"
    },
    "434": {
      "op": "SUB"
    },
    "435": {
      "offset": [
        287,
        294
      ],
      "op": "AND",
      "path": "0"
    },
    "436": {
      "offset": [
        273,
        283
      ],
      "op": "CALLER",
      "path": "0"
    },
    "437": {
      "offset": [
        273,
        294
      ],
      "op": "EQ",
      "path": "0"
    },
    "438": {
      "offset": [
        265,
        323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x201"
    },
    "441": {
      "offset": [
        265,
        323
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "442": {
      "fn": "Lottery.getWinner",
      "offset": [
        265,
        323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "444": {
      "fn": "Lottery.getWinner",
      "offset": [
        265,
        323
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "445": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "449": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "451": {
      "op": "SHL"
    },
    "452": {
      "offset": [
        265,
        323
      ],
      "op": "DUP2",
      "path": "0"
    },
    "453": {
      "fn": "Lottery.getWinner",
      "offset": [
        265,
        323
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "456": {
      "offset": [
        265,
        323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "458": {
      "fn": "Lottery.getWinner",
      "offset": [
        265,
        323
      ],
      "op": "DUP3",
      "path": "0"
    },
    "459": {
      "fn": "Lottery.getWinner",
      "offset": [
        265,
        323
      ],
      "op": "ADD",
      "path": "0"
    },
    "460": {
      "op": "MSTORE"
    },
    "461": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "465": {
      "op": "DUP3"
    },
    "466": {
      "op": "ADD"
    },
    "467": {
      "op": "MSTORE"
    },
    "468": {
      "op": "PUSH32",
      "value": "0x41636365737320746F204D616E61676572204F6E6C7921210000000000000000"
    },
    "501": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "503": {
      "op": "DUP3"
    },
    "504": {
      "op": "ADD"
    },
    "505": {
      "op": "MSTORE"
    },
    "506": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "508": {
      "op": "ADD"
    },
    "509": {
      "offset": [
        265,
        323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15B"
    },
    "512": {
      "op": "JUMP"
    },
    "513": {
      "offset": [
        265,
        323
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "514": {
      "fn": "Lottery.getWinner",
      "offset": [
        998,
        1005
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x1"
    },
    "516": {
      "fn": "Lottery.getWinner",
      "offset": [
        998,
        1012
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "517": {
      "fn": "Lottery.getWinner",
      "offset": [
        990,
        1039
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "520": {
      "fn": "Lottery.getWinner",
      "offset": [
        990,
        1039
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "521": {
      "fn": "Lottery.getWinner",
      "offset": [
        990,
        1039
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "523": {
      "fn": "Lottery.getWinner",
      "offset": [
        990,
        1039
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "524": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "528": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "530": {
      "op": "SHL"
    },
    "531": {
      "fn": "Lottery.getWinner",
      "offset": [
        990,
        1039
      ],
      "op": "DUP2",
      "path": "0"
    },
    "532": {
      "fn": "Lottery.getWinner",
      "offset": [
        990,
        1039
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "535": {
      "fn": "Lottery.getWinner",
      "offset": [
        990,
        1039
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "537": {
      "fn": "Lottery.getWinner",
      "offset": [
        990,
        1039
      ],
      "op": "DUP3",
      "path": "0"
    },
    "538": {
      "fn": "Lottery.getWinner",
      "offset": [
        990,
        1039
      ],
      "op": "ADD",
      "path": "0"
    },
    "539": {
      "op": "MSTORE"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "544": {
      "op": "DUP3"
    },
    "545": {
      "op": "ADD"
    },
    "546": {
      "op": "MSTORE"
    },
    "547": {
      "op": "PUSH18",
      "value": "0x506C617965727320636F756E74206973203"
    },
    "566": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "568": {
      "op": "SHL"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "571": {
      "op": "DUP3"
    },
    "572": {
      "op": "ADD"
    },
    "573": {
      "op": "MSTORE"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "576": {
      "op": "ADD"
    },
    "577": {
      "fn": "Lottery.getWinner",
      "offset": [
        990,
        1039
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15B"
    },
    "580": {
      "op": "JUMP"
    },
    "581": {
      "fn": "Lottery.getWinner",
      "offset": [
        990,
        1039
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "582": {
      "fn": "Lottery.getWinner",
      "offset": [
        1076,
        1083
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "584": {
      "fn": "Lottery.getWinner",
      "offset": [
        1076,
        1090
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "585": {
      "fn": "Lottery.getWinner",
      "offset": [
        1049,
        1062
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "587": {
      "fn": "Lottery.getWinner",
      "offset": [
        1049,
        1062
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "588": {
      "fn": "Lottery.getWinner",
      "offset": [
        1065,
        1073
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x253"
    },
    "591": {
      "fn": "Lottery.getWinner",
      "offset": [
        1065,
        1071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x346"
    },
    "594": {
      "fn": "Lottery.getWinner",
      "jump": "i",
      "offset": [
        1065,
        1073
      ],
      "op": "JUMP",
      "path": "0"
    },
    "595": {
      "fn": "Lottery.getWinner",
      "offset": [
        1065,
        1073
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "596": {
      "fn": "Lottery.getWinner",
      "offset": [
        1065,
        1090
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25D"
    },
    "599": {
      "fn": "Lottery.getWinner",
      "offset": [
        1065,
        1090
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "600": {
      "fn": "Lottery.getWinner",
      "offset": [
        1065,
        1090
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "601": {
      "fn": "Lottery.getWinner",
      "offset": [
        1065,
        1090
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40F"
    },
    "604": {
      "fn": "Lottery.getWinner",
      "jump": "i",
      "offset": [
        1065,
        1090
      ],
      "op": "JUMP",
      "path": "0"
    },
    "605": {
      "fn": "Lottery.getWinner",
      "offset": [
        1065,
        1090
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "606": {
      "fn": "Lottery.getWinner",
      "offset": [
        1049,
        1090
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "607": {
      "fn": "Lottery.getWinner",
      "offset": [
        1049,
        1090
      ],
      "op": "POP",
      "path": "0"
    },
    "608": {
      "fn": "Lottery.getWinner",
      "offset": [
        1100,
        1128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "610": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "612": {
      "fn": "Lottery.getWinner",
      "offset": [
        1147,
        1152
      ],
      "op": "DUP3",
      "path": "0"
    },
    "613": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "DUP2",
      "path": "0"
    },
    "614": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "615": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "DUP2",
      "path": "0"
    },
    "616": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "LT",
      "path": "0"
    },
    "617": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x274"
    },
    "620": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "621": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x274"
    },
    "624": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x431"
    },
    "627": {
      "fn": "Lottery.getWinner",
      "jump": "i",
      "offset": [
        1139,
        1153
      ],
      "op": "JUMP",
      "path": "0"
    },
    "628": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "629": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "631": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "632": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "DUP3",
      "path": "0"
    },
    "633": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "634": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "636": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "DUP3",
      "path": "0"
    },
    "637": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "638": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "ADD",
      "path": "0"
    },
    "639": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "640": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1175
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x2"
    },
    "642": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "DUP1",
      "path": "0"
    },
    "643": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "644": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "646": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "DUP2",
      "path": "0"
    },
    "647": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "ADD",
      "path": "0"
    },
    "648": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "DUP3",
      "path": "0"
    },
    "649": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "650": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "651": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "DUP4",
      "path": "0"
    },
    "652": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "653": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
    },
    "686": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "ADD",
      "path": "0"
    },
    "687": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "DUP1",
      "path": "0"
    },
    "688": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "695": {
      "op": "SHL"
    },
    "696": {
      "op": "SUB"
    },
    "697": {
      "op": "NOT"
    },
    "698": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "AND",
      "path": "0"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "705": {
      "op": "SHL"
    },
    "706": {
      "op": "SUB"
    },
    "707": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "708": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "709": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "AND",
      "path": "0"
    },
    "710": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "711": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "DUP3",
      "path": "0"
    },
    "712": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "OR",
      "path": "0"
    },
    "713": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "714": {
      "fn": "Lottery.getWinner",
      "offset": [
        1164,
        1194
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "715": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x40"
    },
    "717": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "718": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "719": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "720": {
      "op": "POP"
    },
    "721": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "DUP3",
      "path": "0"
    },
    "722": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "723": {
      "fn": "Lottery.getWinner",
      "offset": [
        1226,
        1247
      ],
      "op": "SELFBALANCE",
      "path": "0"
    },
    "724": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "DUP1",
      "path": "0"
    },
    "725": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "726": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "729": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "MUL",
      "path": "0"
    },
    "730": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "731": {
      "fn": "Lottery.getWinner",
      "offset": [
        1226,
        1247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "732": {
      "fn": "Lottery.getWinner",
      "offset": [
        1226,
        1247
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "733": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "DUP2",
      "path": "0"
    },
    "734": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "DUP2",
      "path": "0"
    },
    "735": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "DUP2",
      "path": "0"
    },
    "736": {
      "fn": "Lottery.getWinner",
      "offset": [
        1226,
        1247
      ],
      "op": "DUP6",
      "path": "0"
    },
    "737": {
      "fn": "Lottery.getWinner",
      "offset": [
        1139,
        1153
      ],
      "op": "DUP9",
      "path": "0"
    },
    "738": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "DUP9",
      "path": "0"
    },
    "739": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "CALL",
      "path": "0"
    },
    "740": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "741": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "POP",
      "path": "0"
    },
    "742": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "POP",
      "path": "0"
    },
    "743": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "POP",
      "path": "0"
    },
    "744": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "POP",
      "path": "0"
    },
    "745": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "746": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "DUP1",
      "path": "0"
    },
    "747": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "748": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F9"
    },
    "751": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "752": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "753": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "755": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "DUP1",
      "path": "0"
    },
    "756": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "757": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "758": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "760": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "REVERT",
      "path": "0"
    },
    "761": {
      "fn": "Lottery.getWinner",
      "offset": [
        1204,
        1248
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "762": {
      "op": "POP"
    },
    "763": {
      "fn": "Lottery.getWinner",
      "offset": [
        1268,
        1284
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x40"
    },
    "765": {
      "fn": "Lottery.getWinner",
      "offset": [
        1268,
        1284
      ],
      "op": "DUP1",
      "path": "0"
    },
    "766": {
      "fn": "Lottery.getWinner",
      "offset": [
        1268,
        1284
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "767": {
      "fn": "Lottery.getWinner",
      "offset": [
        1282,
        1283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "769": {
      "fn": "Lottery.getWinner",
      "offset": [
        1268,
        1284
      ],
      "op": "DUP2",
      "path": "0"
    },
    "770": {
      "fn": "Lottery.getWinner",
      "offset": [
        1268,
        1284
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "771": {
      "fn": "Lottery.getWinner",
      "offset": [
        1268,
        1284
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "773": {
      "fn": "Lottery.getWinner",
      "offset": [
        1268,
        1284
      ],
      "op": "DUP2",
      "path": "0"
    },
    "774": {
      "fn": "Lottery.getWinner",
      "offset": [
        1268,
        1284
      ],
      "op": "ADD",
      "path": "0"
    },
    "775": {
      "fn": "Lottery.getWinner",
      "offset": [
        1268,
        1284
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "776": {
      "fn": "Lottery.getWinner",
      "offset": [
        1268,
        1284
      ],
      "op": "DUP3",
      "path": "0"
    },
    "777": {
      "fn": "Lottery.getWinner",
      "offset": [
        1268,
        1284
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "778": {
      "fn": "Lottery.getWinner",
      "offset": [
        1268,
        1284
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "779": {
      "fn": "Lottery.getWinner",
      "offset": [
        1258,
        1284
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "780": {
      "fn": "Lottery.getWinner",
      "offset": [
        1258,
        1284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x317"
    },
    "783": {
      "fn": "Lottery.getWinner",
      "offset": [
        1258,
        1284
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "784": {
      "fn": "Lottery.getWinner",
      "offset": [
        1258,
        1265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "786": {
      "fn": "Lottery.getWinner",
      "offset": [
        1258,
        1265
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "787": {
      "fn": "Lottery.getWinner",
      "offset": [
        1258,
        1284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37C"
    },
    "790": {
      "fn": "Lottery.getWinner",
      "jump": "i",
      "offset": [
        1258,
        1284
      ],
      "op": "JUMP",
      "path": "0"
    },
    "791": {
      "fn": "Lottery.getWinner",
      "offset": [
        1258,
        1284
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "792": {
      "fn": "Lottery.getWinner",
      "offset": [
        1258,
        1284
      ],
      "op": "POP",
      "path": "0"
    },
    "793": {
      "fn": "Lottery.getWinner",
      "offset": [
        980,
        1291
      ],
      "op": "POP",
      "path": "0"
    },
    "794": {
      "fn": "Lottery.getWinner",
      "offset": [
        980,
        1291
      ],
      "op": "POP",
      "path": "0"
    },
    "795": {
      "fn": "Lottery.getWinner",
      "jump": "o",
      "offset": [
        940,
        1291
      ],
      "op": "JUMP",
      "path": "0"
    },
    "796": {
      "offset": [
        117,
        141
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "797": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "799": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "DUP2",
      "path": "0"
    },
    "800": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "DUP2",
      "path": "0"
    },
    "801": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "802": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "DUP2",
      "path": "0"
    },
    "803": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "LT",
      "path": "0"
    },
    "804": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32C"
    },
    "807": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "808": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "810": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "DUP1",
      "path": "0"
    },
    "811": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "REVERT",
      "path": "0"
    },
    "812": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "813": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "815": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "816": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "DUP3",
      "path": "0"
    },
    "817": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "818": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "820": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "821": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "822": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "823": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "ADD",
      "path": "0"
    },
    "824": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "831": {
      "op": "SHL"
    },
    "832": {
      "op": "SUB"
    },
    "833": {
      "offset": [
        117,
        141
      ],
      "op": "AND",
      "path": "0"
    },
    "834": {
      "fn": "Lottery.getWinner",
      "offset": [
        117,
        141
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "835": {
      "op": "POP"
    },
    "836": {
      "offset": [
        117,
        141
      ],
      "op": "DUP2",
      "path": "0"
    },
    "837": {
      "fn": "Lottery.getWinner",
      "jump": "o",
      "offset": [
        117,
        141
      ],
      "op": "JUMP",
      "path": "0"
    },
    "838": {
      "fn": "Lottery.random",
      "offset": [
        701,
        934
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "839": {
      "fn": "Lottery.random",
      "offset": [
        741,
        748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "841": {
      "fn": "Lottery.random",
      "offset": [
        852,
        868
      ],
      "op": "DIFFICULTY",
      "path": "0",
      "statement": 8
    },
    "842": {
      "fn": "Lottery.random",
      "offset": [
        870,
        885
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "843": {
      "fn": "Lottery.random",
      "offset": [
        887,
        894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "845": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "847": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "848": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "850": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "ADD",
      "path": "0"
    },
    "851": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35E"
    },
    "854": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "855": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "856": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "857": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "858": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x447"
    },
    "861": {
      "fn": "Lottery.random",
      "jump": "i",
      "offset": [
        835,
        895
      ],
      "op": "JUMP",
      "path": "0"
    },
    "862": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "863": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "865": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "866": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "868": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "DUP2",
      "path": "0"
    },
    "869": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "DUP4",
      "path": "0"
    },
    "870": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "SUB",
      "path": "0"
    },
    "871": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "SUB",
      "path": "0"
    },
    "872": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "DUP2",
      "path": "0"
    },
    "873": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "874": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "875": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "877": {
      "fn": "Lottery.random",
      "offset": [
        835,
        895
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "878": {
      "fn": "Lottery.random",
      "offset": [
        804,
        913
      ],
      "op": "DUP1",
      "path": "0"
    },
    "879": {
      "fn": "Lottery.random",
      "offset": [
        804,
        913
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "880": {
      "fn": "Lottery.random",
      "offset": [
        804,
        913
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "881": {
      "fn": "Lottery.random",
      "offset": [
        804,
        913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "883": {
      "fn": "Lottery.random",
      "offset": [
        804,
        913
      ],
      "op": "ADD",
      "path": "0"
    },
    "884": {
      "fn": "Lottery.random",
      "offset": [
        804,
        913
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "885": {
      "fn": "Lottery.random",
      "offset": [
        779,
        927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "887": {
      "fn": "Lottery.random",
      "offset": [
        779,
        927
      ],
      "op": "SHR",
      "path": "0"
    },
    "888": {
      "fn": "Lottery.random",
      "offset": [
        760,
        927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "889": {
      "fn": "Lottery.random",
      "offset": [
        760,
        927
      ],
      "op": "POP",
      "path": "0"
    },
    "890": {
      "fn": "Lottery.random",
      "offset": [
        701,
        934
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "891": {
      "fn": "Lottery.random",
      "jump": "o",
      "offset": [
        701,
        934
      ],
      "op": "JUMP",
      "path": "0"
    },
    "892": {
      "op": "JUMPDEST"
    },
    "893": {
      "op": "DUP3"
    },
    "894": {
      "op": "DUP1"
    },
    "895": {
      "op": "SLOAD"
    },
    "896": {
      "op": "DUP3"
    },
    "897": {
      "op": "DUP3"
    },
    "898": {
      "op": "SSTORE"
    },
    "899": {
      "op": "SWAP1"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "902": {
      "op": "MSTORE"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "907": {
      "op": "KECCAK256"
    },
    "908": {
      "op": "SWAP1"
    },
    "909": {
      "op": "DUP2"
    },
    "910": {
      "op": "ADD"
    },
    "911": {
      "op": "SWAP3"
    },
    "912": {
      "op": "DUP3"
    },
    "913": {
      "op": "ISZERO"
    },
    "914": {
      "op": "PUSH2",
      "value": "0x3D1"
    },
    "917": {
      "op": "JUMPI"
    },
    "918": {
      "op": "SWAP2"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "921": {
      "op": "MUL"
    },
    "922": {
      "op": "DUP3"
    },
    "923": {
      "op": "ADD"
    },
    "924": {
      "op": "JUMPDEST"
    },
    "925": {
      "op": "DUP3"
    },
    "926": {
      "op": "DUP2"
    },
    "927": {
      "op": "GT"
    },
    "928": {
      "op": "ISZERO"
    },
    "929": {
      "op": "PUSH2",
      "value": "0x3D1"
    },
    "932": {
      "op": "JUMPI"
    },
    "933": {
      "op": "DUP3"
    },
    "934": {
      "op": "MLOAD"
    },
    "935": {
      "op": "DUP3"
    },
    "936": {
      "op": "SLOAD"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "943": {
      "op": "SHL"
    },
    "944": {
      "op": "SUB"
    },
    "945": {
      "op": "NOT"
    },
    "946": {
      "op": "AND"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "953": {
      "op": "SHL"
    },
    "954": {
      "op": "SUB"
    },
    "955": {
      "op": "SWAP1"
    },
    "956": {
      "op": "SWAP2"
    },
    "957": {
      "op": "AND"
    },
    "958": {
      "op": "OR"
    },
    "959": {
      "op": "DUP3"
    },
    "960": {
      "op": "SSTORE"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "963": {
      "op": "SWAP1"
    },
    "964": {
      "op": "SWAP3"
    },
    "965": {
      "op": "ADD"
    },
    "966": {
      "op": "SWAP2"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "969": {
      "op": "SWAP1"
    },
    "970": {
      "op": "SWAP2"
    },
    "971": {
      "op": "ADD"
    },
    "972": {
      "op": "SWAP1"
    },
    "973": {
      "op": "PUSH2",
      "value": "0x39C"
    },
    "976": {
      "op": "JUMP"
    },
    "977": {
      "op": "JUMPDEST"
    },
    "978": {
      "op": "POP"
    },
    "979": {
      "op": "PUSH2",
      "value": "0x3DD"
    },
    "982": {
      "op": "SWAP3"
    },
    "983": {
      "op": "SWAP2"
    },
    "984": {
      "op": "POP"
    },
    "985": {
      "op": "PUSH2",
      "value": "0x3E1"
    },
    "988": {
      "jump": "i",
      "op": "JUMP"
    },
    "989": {
      "op": "JUMPDEST"
    },
    "990": {
      "op": "POP"
    },
    "991": {
      "op": "SWAP1"
    },
    "992": {
      "jump": "o",
      "op": "JUMP"
    },
    "993": {
      "op": "JUMPDEST"
    },
    "994": {
      "op": "JUMPDEST"
    },
    "995": {
      "op": "DUP1"
    },
    "996": {
      "op": "DUP3"
    },
    "997": {
      "op": "GT"
    },
    "998": {
      "op": "ISZERO"
    },
    "999": {
      "op": "PUSH2",
      "value": "0x3DD"
    },
    "1002": {
      "op": "JUMPI"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1005": {
      "op": "DUP2"
    },
    "1006": {
      "op": "SSTORE"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1009": {
      "op": "ADD"
    },
    "1010": {
      "op": "PUSH2",
      "value": "0x3E2"
    },
    "1013": {
      "op": "JUMP"
    },
    "1014": {
      "op": "JUMPDEST"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1019": {
      "op": "DUP3"
    },
    "1020": {
      "op": "DUP5"
    },
    "1021": {
      "op": "SUB"
    },
    "1022": {
      "op": "SLT"
    },
    "1023": {
      "op": "ISZERO"
    },
    "1024": {
      "op": "PUSH2",
      "value": "0x408"
    },
    "1027": {
      "op": "JUMPI"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1030": {
      "op": "DUP1"
    },
    "1031": {
      "op": "REVERT"
    },
    "1032": {
      "op": "JUMPDEST"
    },
    "1033": {
      "op": "POP"
    },
    "1034": {
      "op": "CALLDATALOAD"
    },
    "1035": {
      "op": "SWAP2"
    },
    "1036": {
      "op": "SWAP1"
    },
    "1037": {
      "op": "POP"
    },
    "1038": {
      "jump": "o",
      "op": "JUMP"
    },
    "1039": {
      "op": "JUMPDEST"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1042": {
      "op": "DUP3"
    },
    "1043": {
      "op": "PUSH2",
      "value": "0x42C"
    },
    "1046": {
      "op": "JUMPI"
    },
    "1047": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1054": {
      "op": "SHL"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1057": {
      "op": "MSTORE"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1062": {
      "op": "MSTORE"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1067": {
      "op": "REVERT"
    },
    "1068": {
      "op": "JUMPDEST"
    },
    "1069": {
      "op": "POP"
    },
    "1070": {
      "op": "MOD"
    },
    "1071": {
      "op": "SWAP1"
    },
    "1072": {
      "jump": "o",
      "op": "JUMP"
    },
    "1073": {
      "op": "JUMPDEST"
    },
    "1074": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1081": {
      "op": "SHL"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1084": {
      "op": "MSTORE"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1089": {
      "op": "MSTORE"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1094": {
      "op": "REVERT"
    },
    "1095": {
      "op": "JUMPDEST"
    },
    "1096": {
      "op": "DUP4"
    },
    "1097": {
      "op": "DUP2"
    },
    "1098": {
      "op": "MSTORE"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1103": {
      "op": "DUP5"
    },
    "1104": {
      "op": "DUP2"
    },
    "1105": {
      "op": "DUP5"
    },
    "1106": {
      "op": "ADD"
    },
    "1107": {
      "op": "MSTORE"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1110": {
      "op": "DUP4"
    },
    "1111": {
      "op": "ADD"
    },
    "1112": {
      "op": "DUP5"
    },
    "1113": {
      "op": "SLOAD"
    },
    "1114": {
      "op": "DUP6"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1117": {
      "op": "MSTORE"
    },
    "1118": {
      "op": "DUP3"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1121": {
      "op": "KECCAK256"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1124": {
      "op": "JUMPDEST"
    },
    "1125": {
      "op": "DUP3"
    },
    "1126": {
      "op": "DUP2"
    },
    "1127": {
      "op": "LT"
    },
    "1128": {
      "op": "ISZERO"
    },
    "1129": {
      "op": "PUSH2",
      "value": "0x489"
    },
    "1132": {
      "op": "JUMPI"
    },
    "1133": {
      "op": "DUP2"
    },
    "1134": {
      "op": "SLOAD"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1141": {
      "op": "SHL"
    },
    "1142": {
      "op": "SUB"
    },
    "1143": {
      "op": "AND"
    },
    "1144": {
      "op": "DUP5"
    },
    "1145": {
      "op": "MSTORE"
    },
    "1146": {
      "op": "SWAP3"
    },
    "1147": {
      "op": "DUP5"
    },
    "1148": {
      "op": "ADD"
    },
    "1149": {
      "op": "SWAP3"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1152": {
      "op": "SWAP2"
    },
    "1153": {
      "op": "DUP3"
    },
    "1154": {
      "op": "ADD"
    },
    "1155": {
      "op": "SWAP2"
    },
    "1156": {
      "op": "ADD"
    },
    "1157": {
      "op": "PUSH2",
      "value": "0x464"
    },
    "1160": {
      "op": "JUMP"
    },
    "1161": {
      "op": "JUMPDEST"
    },
    "1162": {
      "op": "POP"
    },
    "1163": {
      "op": "SWAP2"
    },
    "1164": {
      "op": "SWAP9"
    },
    "1165": {
      "op": "SWAP8"
    },
    "1166": {
      "op": "POP"
    },
    "1167": {
      "op": "POP"
    },
    "1168": {
      "op": "POP"
    },
    "1169": {
      "op": "POP"
    },
    "1170": {
      "op": "POP"
    },
    "1171": {
      "op": "POP"
    },
    "1172": {
      "op": "POP"
    },
    "1173": {
      "op": "POP"
    },
    "1174": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "74bdd8dd250cba09276df7cb4a6c7c45b1556a0e",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.5.0 <=0.9.0;\n\ncontract Lottery {\n    address public manager;\n    address[] public players;\n    address[] pastWinners;\n\n    constructor() {\n        manager = msg.sender;\n    }\n\n    modifier onlyManager() {\n        require(msg.sender == manager, \"Access to Manager Only!!\");\n        _;\n    }\n\n    function partCount() public view returns (uint256) {\n        return players.length;\n    }\n\n    function receiveEth() public payable {\n        require(msg.value >= 0.01 ether, \"Send more than 0.01 ethers\");\n        players.push(msg.sender);\n    }\n\n    function getBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n    function random() private view returns (uint256) {\n        return\n            uint256(\n                keccak256(\n                    abi.encodePacked(block.difficulty, block.timestamp, players)\n                )\n            );\n    }\n\n    function getWinner() public onlyManager {\n        require(players.length > 0, \"Players count is 0\");\n        uint256 index = random() % players.length;\n        address payable winnerPlayer = payable(players[index]);\n        pastWinners.push(winnerPlayer);\n        winnerPlayer.transfer(address(this).balance);\n        players = new address[](0);\n    }\n\n    \n}\n",
  "sourceMap": "66:1233:0:-:0;;;175:51;;;;;;;;;-1:-1:-1;199:7:0;:20;;-1:-1:-1;;;;;;199:20:0;209:10;199:20;;;66:1233;;;;;;",
  "sourcePath": "contracts/Lottery.sol",
  "type": "contract"
}